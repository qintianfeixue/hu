// ==========================================================================
// This is auto-generated by gf cli tool. Fill this file as you wish.
// ==========================================================================

package model

import (
	"ceshi1/app/model/internal"
)

// User is the golang structure for table user.
type User internal.User

type Users User

// Fill with you ideas below.
// 注册请求参数，用于前后端交互参数格式约定
type UserApiSignUpReq struct {
	UserName     string `v:"required#用户名不能为空"`
	Mobile       string
	UserPassword string `v:"required|length:6,16#密码不能为空|密码长度应当在:min到:max之间"`
	CreateTime   int
	Sex          int
	UserStatus   int
	DeptId       uint64
	Remark       string
	IsAdmin      int
}

//用于分页查询
type UserApiLimit struct {
	Page string `json:"page" v:"required#开始第几条不能为空"`
	Num  string `json:"num" v:"required#几条数据"`
}

//登录请求参数，用于前后端交互参数格式约定
type UserApiSignInReq struct {
	UserName     string `json:"username" v:"required#用户名不能为空"`
	UserPassword string `json:"password" v:"required#密码不能为空"`
}

// 用户名唯一性检测请求参数，用于前后端交互参数格式约定
type UserApiCheckUserNameReq struct {
	UserName string `v:"required#用户名不能为空"`
}

// 用于展示用户信息
type UserApiGetInfo struct {
	Id       int    `json:"id"`       //
	UserName string `json:"userName"` // 用户名
	// Mobile   string `json:"mobile"`   // 手机号
	// CreateTime int    `json:"createTime"` // 注册时间
	// Sex        string `json:"sex"`        // 性别;0:保密,1:男,2:女
	Avatar     string `json:"avatar"`     // 用户头像
	UserStatus string `json:"userStatus"` // 用户状态；0:禁用,1:正常
	// LastLoginTime int    `json:"lastLoginTime"` // 最后登录时间
	// LastLoginIp   string `json:"lastLoginIp"`   // 最后登录ip
	DeptId int `json:"deptId"` // 部门id
	// Remark        string `json:"remark"`        // 备注
	IsAdmin string `json:"-"` // 是否后台管理员；1:是，0:否
}

// type UserAuth struct {
// 	User         *User
// 	UserRoleAuth []*UserRoleGetOne
// }
type UserAuth struct {
	User  []User
	Page  int `json:"page" v:"required#开始第几条不能为空"`
	Num   int `json:"num" v:"required#几条数据"`
	Count int
	Next  int
}
